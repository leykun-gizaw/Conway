# Construct a tuple with values to determine state of current cell #
def neibors_tupple(matrix, CELLS, row, col):
    if row == 0 and col == 0:
        s = matrix[row+1][col].get()
        sw = matrix[row+1][col+1].get()
        w = matrix[row][col+1].get()
        return (s, sw, w)
    if row == 0 and col == CELLS-1:
        s = matrix[row+1][col].get()
        se = matrix[row+1][col-1].get()
        e = matrix[row][col-1].get()
        return (s, se, e)
    if row == 0 and col != 0 and col != CELLS-1:
        s = matrix[row+1][col].get()
        e = matrix[row][col-1].get()
        w = matrix[row][col+1].get()
        se = matrix[row+1][col-1].get()
        sw = matrix[row+1][col+1].get()
        return (s, e, w, se, sw)
    if row != 0 and row != CELLS-1 and col == 0:
        n = matrix[row-1][col].get()
        s = matrix[row+1][col].get()
        w = matrix[row][col+1].get()
        nw = matrix[row-1][col+1].get()
        sw = matrix[row+1][col+1].get()
        return (n, s, w, nw, sw)
    if row == CELLS-1 and col == 0:
        n = matrix[row-1][col].get()
        nw = matrix[row-1][col+1].get()
        w = matrix[row][col+1].get()
        return (n, nw, w)
    if row == CELLS-1 and col != 0 and col != CELLS-1:
        n = matrix[row-1][col].get()
        e = matrix[row][col-1].get()
        w = matrix[row][col+1].get()
        ne = matrix[row-1][col-1].get()
        nw = matrix[row-1][col+1].get()
        return (n, e, w, ne, nw)
    if row != 0 and row != CELLS-1 and col == CELLS-1:
        n = matrix[row-1][col].get()
        s = matrix[row+1][col].get()
        e = matrix[row][col-1].get()
        ne = matrix[row-1][col-1].get()
        se = matrix[row+1][col-1].get()
        return (n, s, e, ne, se)
    if row == CELLS-1 and col == CELLS-1:
        n = matrix[row-1][col].get()
        ne = matrix[row-1][col-1].get()
        e = matrix[row][col-1].get()
        return (n, ne, e)
    n = matrix[row-1][col].get()
    s = matrix[row+1][col].get()
    e = matrix[row][col-1].get()
    w = matrix[row][col+1].get()
    ne = matrix[row-1][col-1].get()
    nw = matrix[row-1][col+1].get()
    se = matrix[row+1][col-1].get()
    sw = matrix[row+1][col+1].get()
    return (n, s, e, w, ne, nw, se, sw)
